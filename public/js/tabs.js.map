{"version":3,"file":"tabs.js","sources":["../../src/js/tabs.ts"],"sourcesContent":["// Simple tabbing functionality\n\nconst ACTIVE_CLASS = \"active\";\nconst INACTIVE_CLASS = \"inactive\";\nconst TABBAR_CLASS = \"tabbar\";\nconst BOX_CLASS = \"box\";\nconst TAB_CLASS = \"tab\";\n\n// activate(ele)\n//\n// Called by tab's onclick handler, activates the tab and\n// corresponding content box.\nlet activate = function (ele) {\n  if (!ele) {\n    return;\n  }\n\n  let index = -1,\n    clicked_index = -1,\n    children = ele.parentNode.parentNode.childNodes;\n\n  for (let i in children) {\n    if (!has_class(children[i], TABBAR_CLASS)) {\n      continue;\n    }\n\n    let tabs = children[i].childNodes;\n\n    // Tabs\n    for (let tab in tabs) {\n      if (!has_class(tabs[tab], TAB_CLASS)) {\n        continue;\n      }\n\n      index += 1;\n\n      if (tabs[tab] == ele) {\n        clicked_index = index;\n        tabs[tab].classList.remove(INACTIVE_CLASS);\n        tabs[tab].classList.add(ACTIVE_CLASS);\n      } else {\n        tabs[tab].classList.add(INACTIVE_CLASS);\n        tabs[tab].classList.remove(ACTIVE_CLASS);\n      }\n    }\n  }\n\n  // Boxes\n  if (ele.parentNode && ele.parentNode.parentNode) {\n    const children = ele.parentNode.parentNode.childNodes;\n\n    index = -1;\n\n    for (let i in children) {\n      if (!has_class(children[i], BOX_CLASS)) {\n        continue;\n      }\n\n      index += 1;\n\n      if (index == clicked_index) {\n        children[i].classList.remove(INACTIVE_CLASS);\n        children[i].classList.add(ACTIVE_CLASS);\n      } else {\n        children[i].classList.remove(ACTIVE_CLASS);\n        children[i].classList.add(INACTIVE_CLASS);\n      }\n    }\n  }\n}\n\n// has_class(ele, class_name)\n//\n// Determines whether the given element ele has the class\n// name class_name;\nlet has_class = function (ele, class_name) {\n  if (ele && ele.classList) {\n    return ele.classList.contains(class_name);\n  } else {\n    return false;\n  }\n}\n\nexport default function (el) {\n  const children = el.childNodes;\n\n  for (let j = 0; j < children.length; j++) {\n    if (!has_class(children[j], TABBAR_CLASS)) {\n      continue;\n    }\n\n    let tabs = children[j].childNodes;\n\n    for (let k = 0; k < tabs.length; k++) {\n      if (!has_class(tabs[k], TAB_CLASS)) {\n        continue;\n      }\n\n      tabs[k].addEventListener(\"click\", function () {\n        activate(this);\n      }, {\n        passive: true\n      });\n    }\n  }\n}"],"names":["INACTIVE_CLASS","activate","ele","index","clicked_index","children","parentNode","childNodes","i","has_class","tabs","tab","classList","remove","add","children_1","class_name","contains","el","j","length","k","addEventListener","this","passive"],"mappings":"qCAGMA,EAAiB,WASnBC,EAAW,SAAUC,GACvB,GAAKA,GAIL,IAAIC,GAAS,EACXC,GAAiB,EACjBC,EAAWH,EAAII,WAAWA,WAAWC,WAEvC,IAAK,IAAIC,KAAKH,EACZ,GAAKI,EAAUJ,EAASG,GAlBP,WAsBjB,IAAIE,EAAOL,EAASG,GAAGD,WAGvB,IAAK,IAAII,KAAOD,EACTD,EAAUC,EAAKC,GAxBR,SA4BZR,GAAS,EAELO,EAAKC,IAAQT,GACfE,EAAgBD,EAChBO,EAAKC,GAAKC,UAAUC,OAAOb,GAC3BU,EAAKC,GAAKC,UAAUE,gBAEpBJ,EAAKC,GAAKC,UAAUE,IAAId,GACxBU,EAAKC,GAAKC,UAAUC,mBAM1B,GAAIX,EAAII,YAAcJ,EAAII,WAAWA,WAAY,CAC/C,IAAMS,EAAWb,EAAII,WAAWA,WAAWC,WAI3C,IAAK,IAAIC,KAFTL,GAAS,EAEKY,EACPN,EAAUM,EAASP,GAjDZ,UAqDZL,GAAS,IAEIC,GACXW,EAASP,GAAGI,UAAUC,OAAOb,GAC7Be,EAASP,GAAGI,UAAUE,gBAEtBC,EAASP,GAAGI,UAAUC,iBACtBE,EAASP,GAAGI,UAAUE,IAAId,QAU9BS,EAAY,SAAUP,EAAKc,YACzBd,IAAOA,EAAIU,YACNV,EAAIU,UAAUK,SAASD,oBAMTE,GAGvB,QAFMb,EAAWa,EAAGX,WAEXY,EAAI,EAAGA,EAAId,EAASe,OAAQD,IACnC,GAAKV,EAAUJ,EAASc,aAMxB,QAFIT,EAAOL,EAASc,GAAGZ,WAEdc,EAAI,EAAGA,EAAIX,EAAKU,OAAQC,IAC1BZ,EAAUC,EAAKW,WAIpBX,EAAKW,GAAGC,iBAAiB,QAAS,WAChCrB,EAASsB,OACR,CACDC"}