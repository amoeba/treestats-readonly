<h2>Character</h2>

<%= @character[:name] %>

<h3>Skills</h3>
<h4>Specialized</h4>
<ul>
  <% @character.skills.filter { |s| s.training_id == 3 }.each do |skill| %>
  <li>id: <%= skill[:skill_id] %>, training: <%= skill[:training_id] %></li>
  <% end %>
</ul>

<h4>Trained</h4>
<ul>
  <% @character.skills.filter { |s| s.training_id == 2 }.each do |skill| %>
  <li>id: <%= skill[:skill_id] %>, training: <%= skill[:training_id] %></li>
  <% end %>
</ul>

<h4>Untrained</h4>
<ul>
  <% @character.skills.filter { |s| s.training_id == 1 }.each do |skill| %>
  <li>id: <%= skill[:skill_id] %>, training: <%= skill[:training_id] %></li>
  <% end %>
</ul>

<h4>Unusable</h4>
<ul>
  <% @character.skills.filter { |s| s.training_id == 0 }.each do |skill| %>
  <li>id: <%= skill[:skill_id] %>, training: <%= skill[:training_id] %></li>
  <% end %>
</ul>

<h3>Titles</h3>
<ul>
<% @character.titles.each do |title| %>
<li><%= title.id %></li>
<% end %>
</ul>

<h3>Allegiance</h3>

<% if @character.monarch %>
Monarch: <li><a href="/<%= @character.monarch[:server] %>/<%= @character.monarch[:name] %>"><%= @character.monarch[:server] %>/<%= @character.monarch[:name] %></a></li>
<% else %>
Monarch: No Monarch
<% end%>
<br />

<% if @character.patron %>
Patron: <a href="/<%= @character.patron[:server] %>/<%= @character.patron[:name] %>"><%= @character.patron[:server] %>/<%= @character.patron[:name] %></a>
<% else %>
Patron: No Patron
<% end%>
<br />

<h4>Vassals</h4>
<ul>
  <% @character.vassals.each do |vassal| %>
  <li><a href="/<%= vassal[:server] %>/<%= vassal[:name] %>"><%= vassal[:server] %>/<%= vassal[:name] %></a></li>
  <% end %>
</ul>

<h3>Chain</h3>
<div id="chain"></div>

<script src="/javascript/d3.min.js"></script>
<script>
  var tokens = window.location.href.split("/");
  var server_name = tokens.length == 5 ? tokens[tokens.length - 2] : null;
  var player_name = tokens.length == 5 ? decodeURIComponent(tokens[tokens.length - 1]) : null;
  var request_url =
        "/" +
        server_name + "/" +
        player_name + "/" +
        "chain";

  d3.json(request_url).then(function(data) {
    var width = 600;
    var height = 400;

    var tree_data = d3.stratify()
      .id(function(d) { return d.id; })
      .parentId(function(d) { return d.patron_id; })
      (data);

    var tree = tree_data => {
      const root = d3.hierarchy(tree_data);
      root.dx = 10;
      root.dy = width / (root.height + 1);
      return d3.tree().nodeSize([root.dx, root.dy])(root);
    }

    const root = tree(tree_data);

    let x0 = Infinity;
    let x1 = -x0;
    root.each(d => {
      if (d.x > x1) x1 = d.x;
      if (d.x < x0) x0 = d.x;
    });

    const chart = d3.select("#chain");
    d3.select(window)
      .on("resize", function() {
        console.log("resize");

        var targetWidth = chart.node().getBoundingClientRect().width;
        chart.attr("width", targetWidth);
      })
    const svg = chart.append("svg")
        .attr("viewBox", [0, 0, width, x1 - x0 + root.dx * 2]);

    const g = svg.append("g")
        .attr("font-family", "sans-serif")
        .attr("font-size", 10)
        .attr("transform", `translate(${root.dy / 3},${root.dx - x0})`);

    const link = g.append("g")
      .attr("fill", "none")
      .attr("stroke", "#555")
      .attr("stroke-opacity", 0.4)
      .attr("stroke-width", 1.5)
    .selectAll("path")
      .data(root.links())
      .join("path")
        .attr("d", d3.linkHorizontal()
            .x(d => d.y)
            .y(d => d.x));

    const node = g.append("g")
        .attr("stroke-linejoin", "round")
        .attr("stroke-width", 3)
      .selectAll("g")
      .data(root.descendants())
      .join("g")
        .attr("transform", d => `translate(${d.y},${d.x})`);

    node.append("circle")
        .attr("fill", d => d.children ? "#555" : "#999")
        .attr("r", 2.5);

    node.append("text")
        .attr("dy", "0.31em")
        .attr("x", d => d.children ? -6 : 6)
        .attr("text-anchor", d => d.children ? "end" : "start")
        .text(d => d.data.data.name)
      .clone(true).lower()
        .attr("stroke", "white");
    });
</script>