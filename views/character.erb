<h2><%= @character[:name] %> (<%= @character[:server] %>)</h2>

<% if !@character.level %>
  <p>This character is incomplete so only its allegiance chain is shown.</p>
<% else %>
  <%= erb :_full_character %>
<% end %>

<h4>Chain</h4>
<div id="chain-container">
  <div class="toggle">Maximize</div>
  <div id="chain" class="message" data-server="<%= @character.server %>" data-character="<%= @character.name %>">Loading...</div>
</div>

<script src="/js/chain.js"></script>
<script src="/js/tabs.js"></script>
<script>
  // Chain
  const chainEl = document.getElementById("chain");

  if (chainEl) {
    chain(chainEl, chainEl.dataset.server, chainEl.dataset.character);
  }

  // Attach click handler for Minimize/Maximize
  const toggle_class = "toggle";
  const zoom_class = "zoomed";
  const toggles = document.getElementsByClassName("toggle");

  if (toggles && toggles.length && toggles.length == 1) {
    const toggle = toggles[0];

    toggle.onclick = function (e) {
      const currentClasses = toggle.parentElement.className;

      if (!(typeof currentClasses === "string")) {
        return;
      }

      if (!toggle.parentElement) {
        return;
      }

      if (currentClasses.indexOf(zoom_class) >= 0) {
        toggle.parentElement.className = toggle_class;
        toggle.innerHTML = "Maximize";
      } else {
        toggle.parentElement.className = toggle_class + " " + zoom_class;
        toggle.innerHTML = "Minimize";

        // Scroll to top
        if (window && window.scrollTo) {
          window.scrollTo(0, 0);
        }
      }
    };
  }

  // Tabs
  const containers = document.getElementsByClassName("tabcontainer");

  for (let i = 0; i < containers.length; i++) {
    tabs(containers[i]);
  }
</script>
